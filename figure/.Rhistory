colnames<-sub("-mean()",".mean",colnames,fixed=TRUE)
colname
colnames
colnames<-names(data)
colnames<-sub("-mean()",".mean",colnames,fixed=TRUE)
colnames<-sub("-std()",".stdev",colnames,fixed=TRUE)
colnames
colnames<-sub("-X",".x",colnames,fixed=TRUE)
colnames<-sub("-Y",".y",colnames,fixed=TRUE)
colnames<-sub("-Z",".z",colnames,fixed=TRUE)
colnames
colnames<-sub("tBody","timeBody",colnames,fixed=TRUE)
colnames<-sub("tGravity","timeGravity",colnames,fixed=TRUE)
colnames<-sub("fBody","freqBody",colnames,fixed=TRUE)
colnames<-sub("fGravity","freqGravity",colnames,fixed=TRUE)
colnames<-sub("tBody","timeBody",colnames,fixed=TRUE)
colnames<-sub("BodyBody","Body",colnames,fixed=TRUE)
colnames
colnames<-sub("Acc","Acceleration",colnames,fixed=TRUE)
colnames<-sub("Mag","Magnitude",colnames,fixed=TRUE)
colnames<-sub("Gyro","Gyroscope",colnames,fixed=TRUE)
colnames
names(data)<-colnames
dim(data)
mean(data$tBodyAcc-mean()-X[data$subject==1 & data$activity==1])
mean(data[data$subject==1 & data$activity==1,3])
data[data$subject==1 & data$activity==1,3]
data$subject==1 & data$activity==1
data$subject==1
data$subject
data<-arrange(data,subject)
data$subject
?arrange
data<-arrange(data,subject,activity)
data[1:30,]
data[1:30,1:5]
?summarize
attributes(data)
data$col.names
data$subject
names(data)
?summarize
tidydata<-data %>% group_by(subject,activity) %>%
summarize(timeBodyAcceleration.mean.y.overall = mean(timeBodyAcceleration.mean.y))
tidydata
dim(tidydata)
?group_by
tidydata<-group_by(data,subject,activity)
tidydata
?tapply
?sappy
?sapply
?tapply
tapply(data[,3],data$subject,data$activity,mean)
?as.list
tapply(data[,3],list(data$subject,data$activity),mean)
names(data)
mean(data[data$subject==1 & data$activity="WALKING",3])
mean(data[data$subject==1 & data$activity=="WALKING",3])
a<-tapply(data[,3],list(data$subject,data$activity),mean)
dim(a)
a
?gather
b<-gather(a,activity,WALKING:LAYING)
b<-gather(a,activity,a$WALKING:a$LAYING)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
gather(stocks, stock, price, -time)
b<-gather(a,activity,mean,a$WALKING:a$LAYING)
b<-gather(a,activity,mean,WALKING:LAYING)
attributes(a)
a<-tapply(data[,3],list(data$subject,data$activity),mean,simplify=TRUE)
attributes(a)
?tapply
?sappy
?sapply
a<-sapply(data[,3],list(data$subject,data$activity),mean,simplify=TRUE)
a<-tapply(data[,3],list(data$subject,data$activity),mean,simplify=TRUE)
?gather
?is.data.frame
is.data.frame(a)
as.data.frame(a)
names(as.data.frame(a))
a<-as.data.frame(a)
b<-gather(a,activity,mean,WALKING:LAYING)
b
a
mean(data[data$subject==30 & data$activity=="WALKING",3])
attributes(a)
?arrange
tmp<-arrange(data,desc(subject))
tmp[1:10,]
tmp[1:10,1:5]
a<-tapply(data[,3],list(data$subject,data$activity),mean,simplify=TRUE)
a
a<-tapply(tmp[,3],list(tmp$subject,tmp$activity),mean,simplify=TRUE)
a
a<-tapply(tmp[,3],list(tmp$subject,tmp$activity),mean)
a
attributes(tmp)
tmp$subject
?tapply
state.x77[1:10,]
state.region
aggregate(state.x77,list(Region=state.region,Cold=state.x77[,"Frost"]>130),mean)
b<-aggregate(data,list(data$subject,data$activity),mean)
warnings()
dim(b)
b
dim(b)
b[1]
b<-aggregate(data,list(data$subject,data$activity),FUN="mean")
b[1,1:10]
b<-aggregate(data,list(subject = data$subject,activity = data$activity),mean)
b[1,1:10]
aggregate(state.x77,list(Region=state.region,Cold=state.x77[,"Frost"]>130),mean)
b<-aggregate(data[,c(-1,-2)],list(subject = data$subject,activity = data$activity),mean)
b[1:10,1:10]
mean(data[data$subject==30 & data$activity=="WALKING",3])
b[b$subject==30 & b$activity=="WALKING",3]
tidydata<-aggregate(data[,c(-1,-2)],list(subject = data$subject,activity = data$activity),mean)
dim(tidydata)
tidydata[1:10,1:10]
save()
q()
?wilcox.text
?wilcox.test
wilcox.test(c(14,15,11,10,6,15,16),"less",mu=16)
wilcox.test(c(14,15,11,10,6,15,16),NULL,alternative="less",mu=16)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv,stringAsFactors=FALSE)
mydf<-read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1", country=="US")
?Comparison
filter(cran,r_version < "3.0.2", country=="IN")
filter(cran,r_version <= "3.0.2", country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_ox=="linus-gnu")
filter(cran,size>100500,r_os=="linus-gnu")
info()
filter(cran,size>100500,r_os=="linus-gnu")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version)
)
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-dbl_df(mydf)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(.cran,.package)
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean)
?summarize
summarize(by_package,mean(size))
?n
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",survey)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","survey.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","survey.csv",method=CURL)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","survey.csv",method=curl)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","survey.csv",method="curl)
)
)
""
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","survey.csv",method="curl")
list.files()
survey<-read.csv("survey.csv")
head(survey)
a<-strsplit(names(survey))
?strsplit
a<-strsplit(names(survey),"wgtp")
dim(a)
names(survey)
a
a[[123]]
names(survey)[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdp.csv",method="curl")
gdp<-read.csv("gdp.csv")
header(gdp)
head(gdp)
gdp<-read.csv("gdp.csv",skip=5)
head(gdp)
gdp<-read.csv("gdp.csv",skip=4)
head(gdp)
gdp
dim(gdp)
gdp[190,]
gdp[191,]
gdp<-gdp[1:190,]
dim(gdp)
head(gdp)
gdp<-gdp[,c(1,2,4,5)]
head(gdp)
names(gdp)<-c("code","rank","country","gdp")
head(gdp)
a<-gdp$gdp
b<-as.numeric(gsub(",","",a))
b
mean(b)
grep("^United",gdp$country)
names(gdp)
gdp$country
grep("^United",as.character(gdp$country)
)
gdp$country[99]
gdp$country[99]<-"Something and Principe"
gdp$country<-as.character(gdp$country)
gdp$country[99]<-"Something and Principe"
gdp$country[196]<"Something and Principe"
gdp$country[186]<"Something and Principe"
gdp$country
gdp$country[186]<"Something and Principe"
gdp[186,]
gdp$country[186]<-"Something and Principe"
gdp$country[99]<-"who knows"
grep("^United",gdp$country)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","educational.txt",method="curl")
ed <-read.table("educational.txt",sep=",",header=TRUE)
ed <-read.table("educational.txt",sep=",",header=TRUE,quote="")
ed <-read.table("educational.txt",sep=",",header=TRUE,quote="",ncol=31)
?read.table
ed <-read.table("educational.txt",sep=",",header=TRUE,quote="",nrows=235)
ed<-read.csv("educational.txt",quote="")
ed<-read.csv2("educational.txt",quote="")
dim(ed)
head(ed)
ed<-read.csv("educational.txt",quote="")
ed
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","educational.csv",method="curl")
ed<-read.csv("educational.txt",quote="")
?read.csv
ed<-read.csv("educational.txt",quote="",skipNul = TRUE)
a<-read.csv("educational.txt",quote="",fill=TRUE)
a<-read.csv("educational.txt",fill=TRUE)
a
dim(a)
head(a)
a<-read.csv("educational.txt",quote="",fill=TRUE)
a<-read.csv("educational.txt",fill=TRUE)
dim(a)
mean(b)
grep("^United",gdp$country)
gdp$country
gdp$country[ord(gdp$country)]
gdp$country[sort(gdp$country)]
b <-arrange(gdp,country)
b$country
dim(a)
names(a)
names(gdp)
?merge
b<-merge(gdp,a,by.x="code",by.y="CountryCode)
b<-merge(gdp,a,by.x="code",by.y="CountryCode")
dim(b)
dim(a)
dim(gdp)
names(b)
head(b)
b$Special.notes
b$Special.Notes
?grep
d<-b$Special.Notes[grep("Fiscal year end:",b$Special.Notes)]
d
grep("June",d)
length(grep("June",d))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
load.packages("quantmod")
load.package("quantmod")
?library
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
dim(amzn)
dim(sampleTimes)
sampleTimes
length(sampleTimes)
?index
is.date(index)
is.Date(index)
library(lubridate)
install.packages("lubridate")
library(lubridate)
is.Date(index)
is.character(index)
index
is.Date(sampleTimes)
ymd(sampleTimes)
swirl()
Sys.getlocate("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day <-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <-now()
this_moment
minute(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12,1975")
mdy("March 12, 1975")
dmy(25081985)
dmy("25081985")
info()
bye()
head(d)
length(d)
sum(year(sampleTimes)==2012)
sum(day(sampleTimes)==2)
sum(day(sampleTimes)==2 & year(sampleTimes)==2012)
length(sampleTimes)
sampleTimes[year(sampleTimes)==2012]
day(sampleTimes[year(sampleTimes)==2012])
sum(day(sampleTimes[year(sampleTimes)==2012])==2)
sum(wday(sampleTimes)==2 & year(sampleTimes)==2012)
setwd("/Users/karen/Coursera/Data")
library(lubridate)
data <- read.table("household_power_consumption.txt",header=TRUE, sep=";", nrows = 2075270,na.strings="?")
data <- read.table("household_power_consumption.txt",header=TRUE, sep=";", nrows = 2075270,na.strings="?")
data$Date <-as.Date(data$Date,format="%d/%m/%Y")
data$Date[1:10]
year(data$Date[1:10])
year(data$Date[1:10])>1999
year(data$Date[1:10])<2007
year(data$Date[1:10])<2005
?in
?%in%
??set
3 %in% [1:10]
3 %in% 1:10
dim(data)
data[1000:1010,]
data[1500:1510,]
data[2000:2050,]
month(data$Date[1:10])
day(data$Date[1:10])
sum(year(data$Date)==2007 & month(data$Date)==2 & (day(data$Date)==1|day(data$Date)==2))
data<-data[year(data$Date)==2007 & month(data$Date)==2 & (day(data$Date)==1|day(data$Date)==2),]
dim(data)
data$Data
data$Date
data$Date[1:100]
data[1,]
data[2080,]
dim(data)
data[2880,]
?as.Time
?strptime
strptime(data$Time[1:10])
strptime(data$Time[1:10],format=%H:%M:%s)
strptime(data$Time[1:10], "%H:%M:%S")
data$Time<-strptime(data$Time, "%H:%M:%S")
data[1,]
?as.Date
data <- read.table("household_power_consumption.txt",header=TRUE, sep=";", nrows = 2075270,na.strings="?")
data$Date <-as.Date(data$Date,format="%d/%m/%Y")
data<-data[year(data$Date)==2007 & month(data$Date)==2 & (day(data$Date)==1|day(data$Date)==2),]
data2880<-data
?strptime
data <- read.table("household_power_consumption.txt",header=TRUE, sep=";", nrows = 2075270,na.strings="?")
x <-paste(data$Date, data$Time)
data$DateTime<-strptime(x,"%d/%m/%Y %H:%M:%S")
data<-data[year(data$DateTime)==2007 & month(data$DateTime)==2 & (day(data$DateTime)==1|day(data$DateTime)==2),]
dim(data)
data[1,]
data$DateTime[1]
x[1:10]
data$DateTime[2]- data$DateTime[1]
data[1:2,]
attributes(data)
data[1,]
attach(data)
hist(Global_active_power, Title="Global Active Power", xlab="Global Active Power (kilowatts")
?hist
hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts", col=red)
?hist
hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts", col="red")
?hist
hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts", col="red")
?par
?dev.off
dev.new(png,"plot1.png",height=480,width=480)
dev.off()
hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts", col="red")
hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", col="red")
dev.copy(png,file="plot1.png",height=480,width=480)
dev.off()
?par
par()
par$ps
par()$ps
par(ps=10)
hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", col="red")
par(ps=14)
hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", col="red")
with(data,hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", col="red"))
par(ps=12)
with(data,hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", col="red"))
par(ps=14)
with(data,hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", col="red"))
par(ps=14)
with(data,hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", col="red"))
setwd("/Users/karen/ExData_Plotting1/ExData_Plotting1")
dev.copy(png,file="plot1.png",height=480,width=480)
dev.off()
setwd("/Users/karen/ExData_Plotting1/ExData_Plotting1/figure")
=
dev.copy(png,file="plot1.png",height=480,width=480)
dev.off()
?tsplot
?plot
names(data)
with(data,plot(day(DateTime),Global_active_power,type="l"))
with(data,plot(wkday(DateTime),Global_active_power,type="l"))
with(data,plot(wday(DateTime),Global_active_power,type="l"))
data$DateTime[1:10]
minute(data$DateTime[1:10])
with(data,plot(minute(DateTime),Global_active_power,type="l"))
with(data,plot(1:2880,Global_active_power,type="l"))
with(data,plot(1:2880,Global_active_power,type="l"),ylab="Global Active Power (kilowatts)")
with(data,plot(1:2880,Global_active_power,type="l"),ylab="Global Active Power (kilowatts)")
?plot
with(data,plot(1:2880,Global_active_power,type="l"),ylab="Global Active Power (kilowatts)")
with(data,plot(1:2880,Global_active_power,type="l"),ylab="Global Active Power (kilowatts)",xlab="")
with(data,plot(1:2880,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
?plot
?par
with(data,plot(1:2880,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
?plot
?plot.default
par()$xaxp
par(xaxp=c(1,2880,2))
with(data,plot(1:2880,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
par()$xaxp
par(xaxp=c(1,2880,2))
par()$xaxp
with(data,plot(1:2880,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
with(data,plot(1:2880,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab="",xaxp=c(1,2880,2)))
par()$xaxp
